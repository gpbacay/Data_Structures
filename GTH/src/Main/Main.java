/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import Classes.DataItemNode;
import Classes.DoublyLinkedList;
import Classes.Patriarch;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JOptionPane;
/**
 *
 * @author Gianne Bacay
 */
public class Main extends javax.swing.JFrame {
    private static final String FILEPATHNAME = "C:\\Users\\Gianne Bacay\\Documents\\NetBeansProjects\\GTH\\src\\Databases\\genealogyDB.csv";
    
    public static DoublyLinkedList PatriarchList = new DoublyLinkedList();
    /**
     * Creates new form UI
     */
    public Main() {
        initComponents();
        Populate_Database();
        PopulateTable();
        
        LandingPage.setVisible(true);
        HomePage.setVisible(false);
        
        FilterBox.setSelectedIndex(0);
        jTable1.setRowSelectionInterval(0, 0);
        int selectedRow = jTable1.getSelectedRow();
        String patriarchName = jTable1.getValueAt(selectedRow, 0).toString();
        
        jLabel3.setText(patriarchName);
        
        //Table Sorter
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(sorter);
        SearchBar.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }
            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }
            private void filter() {
                String text = SearchBar.getText();
                int columnIndex = FilterBox.getSelectedIndex() - 1;
                if (text.isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text, columnIndex));
                }
            }
        });
    }
    
    //Populate Database
    public static void Populate_Database() {
        File file = new File(FILEPATHNAME);
        try (Scanner input = new Scanner(file)) {
            while (input.hasNextLine()) {
                String[] Line = input.nextLine().split(",");
                String patriarchName = Line[0];
                String yearsFromCreation = Line[1];
                String sonName = Line[2];
                String fatherName = Line[3];
                String ageAtFirstChild = Line[4];
                String yearsAfterFirstChild = Line[5];
                String lifespan = Line[6];
                Patriarch patriarch = new Patriarch(patriarchName, yearsFromCreation, sonName, fatherName, ageAtFirstChild, yearsAfterFirstChild, lifespan);
                PatriarchList.Add(patriarch);
            }
        } 
        catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Database file not found!");
        }
    }
    
    //Populate Table
    public static void PopulateTable() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Iterate through the DoublyLinkedList and populate the table
    DataItemNode nav = PatriarchList.Head;
    while (nav != PatriarchList.Tail.getNextNode()) {
        Patriarch patriarch = new Patriarch(nav);
        String patriarchName = patriarch.getPatriarchName();
        String yearsFromCreation = patriarch.getYearsFromCreation();
        String sonName = patriarch.getSonName();
        String fatherName = patriarch.getFatherName();
        String ageAtFirstChild = patriarch.getAgeAtFirstChild();
        String yearsAfterFirstChild = patriarch.getearsAfterFirstChild();
        String lifespan = patriarch.getLifespan();
        model.addRow(new Object[]{patriarchName, yearsFromCreation, sonName, fatherName, ageAtFirstChild, yearsAfterFirstChild, lifespan});
        nav = nav.getNextNode();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LandingPage = new javax.swing.JLayeredPane();
        jButton1 = new javax.swing.JButton();
        LPBGLayer = new javax.swing.JLabel();
        HomePage = new javax.swing.JLayeredPane();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        SearchBar = new javax.swing.JTextField();
        FilterBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        HPBGLayer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LandingPage.setMaximumSize(new java.awt.Dimension(800, 500));
        LandingPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Start");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        LandingPage.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 440, 100, 20));

        LPBGLayer.setIcon(new javax.swing.ImageIcon("C:\\Users\\Gianne Bacay\\Documents\\NetBeansProjects\\GTH\\src\\Resources\\1.png")); // NOI18N
        LandingPage.add(LPBGLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(LandingPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        HomePage.setMaximumSize(new java.awt.Dimension(800, 500));
        HomePage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Gianne Bacay\\Documents\\NetBeansProjects\\GTH\\src\\Resources\\icons8-back-21.png")); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setDefaultCapable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        HomePage.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 60, 40));

        jTable1.setBackground(new java.awt.Color(51, 0, 0));
        jTable1.setForeground(new java.awt.Color(204, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patriarch", "Years from Creation", "Son", "Father", "Age at First Child", "Years after First Child", "Lifespan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(204, 0, 0));
        jTable1.setSelectionForeground(new java.awt.Color(255, 204, 51));
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTable1MouseMoved(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(70);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(70);
            jTable1.getColumnModel().getColumn(1).setMinWidth(115);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(115);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(115);
            jTable1.getColumnModel().getColumn(2).setMinWidth(60);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(3).setMinWidth(60);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(120);
            jTable1.getColumnModel().getColumn(6).setMinWidth(70);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(70);
        }

        HomePage.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 600, 220));

        SearchBar.setText("Search");
        HomePage.add(SearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 240, 30));

        FilterBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filter", "patriarchName", "yearsFromCreation", "sonName", "fatherName", "ageAtFirstChild", "yearsAfterFirstChild", "lifespan" }));
        HomePage.add(FilterBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 160, 200, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("jLabel3");
        HomePage.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 250, 40));

        HPBGLayer.setIcon(new javax.swing.ImageIcon("C:\\Users\\Gianne Bacay\\Documents\\NetBeansProjects\\GTH\\src\\Resources\\2.png")); // NOI18N
        HomePage.add(HPBGLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(HomePage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LandingPage.setVisible(false);
        HomePage.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        LandingPage.setVisible(true);
        HomePage.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseMoved
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        String patriarchName = jTable1.getValueAt(selectedRow, 0).toString();
        
        jLabel3.setText(patriarchName);
    }//GEN-LAST:event_jTable1MouseMoved

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        String patriarchName = jTable1.getValueAt(selectedRow, 0).toString();
        
        jLabel3.setText(patriarchName);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        String patriarchName = jTable1.getValueAt(selectedRow, 0).toString();
        
        jLabel3.setText(patriarchName);
    }//GEN-LAST:event_jTable1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main frame = new Main();
                frame.setResizable(false);
                frame.setTitle("Messianic Genealogy from Adam to Jesus");
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> FilterBox;
    private javax.swing.JLabel HPBGLayer;
    private javax.swing.JLayeredPane HomePage;
    private javax.swing.JLabel LPBGLayer;
    private javax.swing.JLayeredPane LandingPage;
    private javax.swing.JTextField SearchBar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
